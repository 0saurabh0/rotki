from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from sqlite3 import Cursor

    from rotkehlchen.db.dbhandler import DBHandler


def _upgrade_history_events(cursor: 'Cursor') -> None:
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS history_events_copy (
        event_identifier TEXT NOT NULL,
        sequence_index INTEGER NOT NULL,
        timestamp INTEGER NOT NULL,
        location TEXT NOT NULL,
        location_label TEXT,
        asset TEXT NOT NULL,
        amount TEXT NOT NULL,
        usd_value TEXT NOT NULL,
        notes TEXT,
        type TEXT NOT NULL,
        subtype TEXT,
        counterparty TEXT
    );""")
    cursor.execute("""
    INSERT INTO history_events_copy (event_identifier, sequence_index, timestamp, location,
    location_label, asset, amount, usd_value, notes, type, subtype)
    SELECT event_identifier, sequence_index, timestamp, location, location_label, asset,
    amount, usd_value, notes, type, subtype
    FROM history_events;
    """)
    cursor.execute('DROP TABLE history_events;')
    cursor.execute('ALTER TABLE history_events_copy RENAME TO history_events;')
    cursor.execute(
        'UPDATE history_events SET subtype="reward" WHERE type="staking" AND subtype IS NULL;',
    )


def _remove_gitcoin(cursor: 'Cursor') -> None:
    cursor.execute('DELETE from ledger_actions WHERE identifier IN (SELECT parent_id FROM ledger_actions_gitcoin_data)')  # noqa: E501
    cursor.execute('DROP TABLE IF exists gitcoin_grant_metadata')
    cursor.execute('DROP TABLE IF exists ledger_actions_gitcoin_data')
    cursor.execute('DROP TABLE IF exists gitcoin_tx_type')


def upgrade_v31_to_v32(db: 'DBHandler') -> None:
    """Upgrades the DB from v31 to v32
    - use new identifiers for the history_events table. The id will be generated by sqlite
    and will be the column rowid

    -Add the subtype REWARD to staking rewards (before they had type staking
    and no subtype)

    -Remove all gitcoin grant related data that was pulled from their API and saved in
    specific tables along with the tables themselves
    """
    cursor = db.conn.cursor()
    _upgrade_history_events(cursor)
    _remove_gitcoin(cursor)
    db.conn.commit()
